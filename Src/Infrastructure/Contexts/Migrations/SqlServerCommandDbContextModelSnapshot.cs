// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pumpkin.Infrastructure.Contexts.Providers.SqlServer;

#nullable disable

namespace Pumpkin.Infrastructure.Contexts.Migrations
{
    [DbContext(typeof(SqlServerCommandDbContext))]
    partial class SqlServerCommandDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pumpkin.Domain.Entities.Order.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("BasketCode")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("basket_code");

                    b.Property<DateTime>("CancelDeadline")
                        .HasColumnType("datetime2")
                        .HasColumnName("cancel_deadline");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<short>("CurrentState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("SMALLINT")
                        .HasDefaultValue((short)100)
                        .HasColumnName("current_state");

                    b.Property<string>("CustomerAddress")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("customer_address");

                    b.Property<string>("CustomerFirstName")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("customer_first_name");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("customer_id");

                    b.Property<string>("CustomerLastName")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("customer_last_name");

                    b.Property<string>("CustomerMobileNumber")
                        .HasMaxLength(11)
                        .HasColumnType("CHAR(11)")
                        .HasColumnName("customer_mobile_number");

                    b.Property<string>("CustomerNationalCode")
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)")
                        .HasColumnName("customer_national_code");

                    b.Property<bool>("IsConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(false)
                        .HasColumnName("is_confirmed");

                    b.Property<bool>("IsPaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(false)
                        .HasColumnName("is_paid");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("DateTime")
                        .HasColumnName("order_date");

                    b.Property<short>("PaymentState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("SMALLINT")
                        .HasDefaultValue((short)10)
                        .HasColumnName("payment_state");

                    b.Property<string>("PaymentTrackingCode")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("payment_tracking_code");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("removed_at");

                    b.Property<Guid?>("RemovedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("removed_by");

                    b.Property<decimal>("TotalProductPrice")
                        .HasColumnType("DECIMAL(18,0)")
                        .HasColumnName("total_product_price");

                    b.HasKey("Id")
                        .HasName("pk_order");

                    b.HasIndex("BasketCode")
                        .IsUnique()
                        .HasDatabaseName("ix_order_basket_code")
                        .HasFilter("[basket_code] IS NOT NULL");

                    b.ToTable("Order", "dbo");
                });

            modelBuilder.Entity("Pumpkin.Domain.Entities.Order.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("BasketItemCode")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("basket_item_code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<string>("DeviceSerialNumber")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("device_serial_number");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("modified_by");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("order_id");

                    b.Property<string>("ProductBrand")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("product_brand");

                    b.Property<string>("ProductCategory")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("product_category");

                    b.Property<string>("ProductModel")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("product_model");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("DECIMAL(18,0)")
                        .HasColumnName("product_price");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("removed_at");

                    b.Property<Guid?>("RemovedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("removed_by");

                    b.HasKey("Id")
                        .HasName("pk_order_item");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_order_item_order_id");

                    b.ToTable("OrderItem", "dbo");
                });

            modelBuilder.Entity("Pumpkin.Domain.Entities.Order.Policy", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<short>("CurrentState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("SMALLINT")
                        .HasDefaultValue((short)100)
                        .HasColumnName("current_state");

                    b.Property<string>("CustomerAddress")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("customer_address");

                    b.Property<string>("CustomerFirstName")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("customer_first_name");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("customer_id");

                    b.Property<string>("CustomerLastName")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("customer_last_name");

                    b.Property<string>("CustomerMobileNumber")
                        .HasMaxLength(11)
                        .HasColumnType("CHAR(11)")
                        .HasColumnName("customer_mobile_number");

                    b.Property<string>("CustomerNationalCode")
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)")
                        .HasColumnName("customer_national_code");

                    b.Property<DateTime?>("ExpireAt")
                        .HasColumnType("DateTime")
                        .HasColumnName("expire_at");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(false)
                        .HasColumnName("is_active");

                    b.Property<DateTime?>("IssuedAt")
                        .HasColumnType("DateTime")
                        .HasColumnName("issued_at");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("modified_by");

                    b.Property<Guid>("OrderItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("order_item_id");

                    b.Property<long>("PolicyNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("policy_number");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("removed_at");

                    b.Property<Guid?>("RemovedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("removed_by");

                    b.Property<DateTime?>("StartAt")
                        .HasColumnType("DateTime")
                        .HasColumnName("start_at");

                    b.HasKey("Id")
                        .HasName("pk_policy");

                    b.HasIndex("OrderItemId")
                        .IsUnique()
                        .HasDatabaseName("ix_policy_order_item_id");

                    b.ToTable("Policy", "dbo");
                });

            modelBuilder.Entity("Pumpkin.Domain.Entities.Profile.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<string>("FirstName")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("first_name");

                    b.Property<bool?>("Gender")
                        .IsRequired()
                        .HasColumnType("BIT")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("last_name");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(11)
                        .HasColumnType("CHAR(11)")
                        .HasColumnName("mobile_number");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("modified_by");

                    b.Property<string>("NationalCode")
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)")
                        .HasColumnName("national_code");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("removed_at");

                    b.Property<Guid?>("RemovedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("removed_by");

                    b.HasKey("Id")
                        .HasName("pk_user");

                    b.ToTable("User", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f9ca67a1-9bbc-4889-8fa7-21c4847fa51f"),
                            Address = "Tehran, Azadi Street",
                            CreatedAt = new DateTime(2023, 7, 6, 13, 25, 30, 66, DateTimeKind.Local).AddTicks(8555),
                            CreatedBy = new Guid("f9ca67a1-9bbc-4889-8fa7-21c4847fa51f"),
                            FirstName = "Amin",
                            Gender = true,
                            LastName = "Golmahalleh",
                            MobileNumber = "09365545252",
                            NationalCode = "1111111111"
                        },
                        new
                        {
                            Id = new Guid("3a94f7d5-c621-4713-8c5a-656f12ba43b1"),
                            Address = "Westerville, 2044 Winding Way Street",
                            CreatedAt = new DateTime(2023, 7, 6, 13, 25, 30, 66, DateTimeKind.Local).AddTicks(8615),
                            CreatedBy = new Guid("3a94f7d5-c621-4713-8c5a-656f12ba43b1"),
                            FirstName = "Jason",
                            Gender = true,
                            LastName = "Momoa",
                            MobileNumber = "09123456789",
                            NationalCode = "9999999999"
                        });
                });

            modelBuilder.Entity("Pumpkin.Domain.Entities.Order.OrderItem", b =>
                {
                    b.HasOne("Pumpkin.Domain.Entities.Order.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_order_orderItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Pumpkin.Domain.Entities.Order.Policy", b =>
                {
                    b.HasOne("Pumpkin.Domain.Entities.Order.OrderItem", "OrderItem")
                        .WithOne("Policy")
                        .HasForeignKey("Pumpkin.Domain.Entities.Order.Policy", "OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Policy_orderItem");

                    b.Navigation("OrderItem");
                });

            modelBuilder.Entity("Pumpkin.Domain.Entities.Order.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Pumpkin.Domain.Entities.Order.OrderItem", b =>
                {
                    b.Navigation("Policy");
                });
#pragma warning restore 612, 618
        }
    }
}
